# Charter: [D1] 断言工具集

task_id: D1
task_name: 断言工具集实现
stage: D
phase: Align (Retrospective)
created_at: "2025-10-02"
status: COMPLETED
estimated_hours: 2-3
actual_hours: 2.5

## Goal (目标)

实现完整的断言工具集，为小程序自动化测试提供强大的验证能力。

**核心交付物**:
- `src/tools/assert.ts` - 9 个断言工具实现 (465 lines)
- `tests/unit/assert.test.ts` - 单元测试 (394 lines, 27 tests)
- 工具: assertExists, assertNotExists, assertText, assertTextContains, assertValue, assertAttribute, assertProperty, assertData, assertVisible

## Non-Goals (非目标)

- ❌ 不实现自定义断言逻辑（仅标准断言）
- ❌ 不实现软断言（所有断言失败即抛错）
- ❌ 不实现断言结果聚合报告（留给未来）
- ❌ 不实现快照比对（属于 D2）

## Scope (范围)

### In Scope (包含)

1. **元素存在性断言**
   - ✅ assertExists - 断言元素存在
   - ✅ assertNotExists - 断言元素不存在
   - ✅ 支持 selector 和 pagePath 参数

2. **文本内容断言**
   - ✅ assertText - 精确文本匹配
   - ✅ assertTextContains - 文本包含子串
   - ✅ 返回期望值和实际值对比

3. **表单值断言**
   - ✅ assertValue - input/textarea 值断言
   - ✅ 支持任意表单组件

4. **属性和状态断言**
   - ✅ assertAttribute - HTML 属性断言
   - ✅ assertProperty - JavaScript 属性断言
   - ✅ assertVisible - 可见性断言（基于尺寸）

5. **页面数据断言**
   - ✅ assertData - Page data 断言
   - ✅ 支持嵌套路径访问

### Out of Scope (不包含)

- ❌ 正则表达式匹配（使用字符串精确/包含匹配）
- ❌ 数值范围断言（使用精确匹配）
- ❌ 数组长度/内容断言（使用 JSON 比较）
- ❌ 自定义匹配器

## Constraints (约束)

### Technical Constraints (技术约束)

1. **工具依赖**
   - 复用 Page 工具（query, getData）
   - 复用 Element 工具（getText, getValue, getAttribute, etc.）
   - 通过函数调用而非直接 SessionState 访问

2. **错误格式**
   - 所有断言失败抛出 Error
   - 错误消息格式: `Assertion failed: <详细说明>`
   - 包含期望值 vs 实际值对比

3. **返回值结构**
   - 成功: `{ success: true, message: string, actual?: any }`
   - 失败: 抛出 Error（不返回 success: false）

4. **日志记录**
   - 使用 session.logger 记录所有断言
   - 包含 info（成功）和 error（失败）

### Business Constraints (业务约束)

1. **执行时间**: 单个断言 <500ms
2. **错误信息**: 必须清晰指明失败原因
3. **可组合性**: 可在测试流程中链式使用

## Success Criteria (成功标准)

### Functional Criteria (功能标准)

- ✅ assertExists 正确检测元素存在性
- ✅ assertNotExists 正确检测元素不存在
- ✅ assertText 精确匹配文本内容
- ✅ assertTextContains 检测子串包含
- ✅ assertValue 验证表单值
- ✅ assertAttribute 验证 HTML 属性
- ✅ assertProperty 验证 JS 属性
- ✅ assertData 验证页面数据（含嵌套）
- ✅ assertVisible 验证元素可见性（非零尺寸）

### Quality Criteria (质量标准)

- ✅ TypeScript 编译 0 错误
- ✅ 单元测试覆盖率 >90%
- ✅ 27 个测试用例全部通过
- ✅ 无 ESLint 错误
- ✅ JSDoc 注释完整

### Documentation Criteria (文档标准)

- ✅ 每个工具有函数签名和 JSDoc
- ✅ 错误消息格式统一
- ⏳ charter.D1.align.yaml (本文档)
- ⏳ tasks.D1.atomize.md (任务卡)

## Definition of Done (完成标准)

**代码**:
- ✅ `src/tools/assert.ts` 实现完成 (465 lines)
- ✅ 9 个断言工具全部实现
- ✅ TypeScript 编译通过

**测试**:
- ✅ `tests/unit/assert.test.ts` (394 lines)
- ✅ 27 个测试用例全部通过
- ✅ 覆盖成功和失败场景
- ✅ Mock page/element 工具依赖

**文档**:
- ⏳ charter.D1.align.yaml (追溯)
- ⏳ tasks.D1.atomize.md (追溯)
- ✅ 代码注释完整

**Git**:
- ✅ 已提交（commit: feat: [D1] 断言工具集实现）

## Dependencies (依赖)

**前置任务**:
- ✅ C3: Page 工具（query, getData）
- ✅ C4: Element 工具（getText, getValue, getAttribute, getProperty, getSize）
- ✅ B2: SessionState 和日志系统

**后续任务**:
- D1 → Stage E (集成到工具注册器)
- D1 → Stage F (端到端测试示例)

## Risks (风险)

### Technical Risks (技术风险)

1. **断言性能** - 🟢 低风险
   - 影响：大量断言可能拖慢测试
   - 缓解：每个断言基于单次元素/数据查询

2. **错误消息可读性** - 🟢 已缓解
   - 风险：期望值 vs 实际值不清晰
   - 缓解：统一格式 `Expected: "...", Actual: "..."`

3. **深度嵌套数据比较** - 🟡 中风险
   - 风险：JSON.stringify 可能无法正确比较复杂对象
   - 缓解：当前使用 JSON 序列化比较，未来可引入深度比较库

### Business Risks (业务风险)

1. **断言失败定位** - 🟢 已缓解
   - 影响：用户不知道哪个断言失败
   - 缓解：错误消息包含 selector/refId/path 信息

## Open Questions (未决问题)

- ❓ 是否需要支持正则表达式匹配？（当前仅字符串）
- ❓ 是否需要软断言（收集所有失败后统一报告）？（当前硬断言）
- ❓ 是否需要自定义匹配器扩展机制？（当前固定 9 个工具）

## References (参考资料)

- `docs/完整实现方案.md` - 工具分层设计
- `src/tools/page.ts` - Page 工具依赖
- `src/tools/element.ts` - Element 工具依赖
- Playwright Assertions - 断言设计参考

---

**Approval**: ✅ RETROSPECTIVE APPROVED
**Implementation**: ✅ COMPLETED
**Documentation**: ⏳ IN PROGRESS
