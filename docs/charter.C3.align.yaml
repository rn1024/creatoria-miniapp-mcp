# Charter: [C3] Page 工具

task_id: C3
task_name: Page 工具实现
stage: C
phase: Align (Retrospective)
created_at: "2025-10-02"
status: COMPLETED
estimated_hours: 3-4
actual_hours: 4

## Goal (目标)

实现 Page 级别的 8 个 MCP 工具，封装页面元素查询、等待、数据读写、方法调用和页面属性获取功能。

**核心交付物**:
- `src/tools/page.ts` - 8 个工具实现 (458 lines)
- `tests/unit/page.test.ts` - 单元测试 (450 lines, 27 tests)
- 工具: query, queryAll, waitFor, getData, setData, callMethod, getSize, getScrollTop

## Non-Goals (非目标)

- ❌ 不实现元素交互操作（留给 C4）
- ❌ 不实现元素属性读取（留给 C4）
- ❌ 不实现复杂的等待条件组合
- ❌ 不实现数据变更监听

## Scope (范围)

### In Scope (包含)

1. **query 工具**
   - ✅ 单元素查询（selector/xpath）
   - ✅ 支持 ElementRef 协议
   - ✅ 支持页面路径指定
   - ✅ 支持缓存和保存

2. **queryAll 工具**
   - ✅ 多元素查询
   - ✅ 返回元素数组
   - ✅ 支持索引访问

3. **waitFor 工具**
   - ✅ 等待元素出现
   - ✅ 支持超时配置
   - ✅ 支持自定义条件

4. **getData 工具**
   - ✅ 获取页面数据
   - ✅ 支持路径查询（如 user.name）
   - ✅ 返回完整数据或部分数据

5. **setData 工具**
   - ✅ 设置页面数据
   - ✅ 支持批量更新
   - ✅ 自动触发页面渲染

6. **callMethod 工具**
   - ✅ 调用页面方法
   - ✅ 支持参数传递
   - ✅ 返回方法结果

7. **getSize 工具**
   - ✅ 获取页面尺寸
   - ✅ 返回宽度和高度

8. **getScrollTop 工具**
   - ✅ 获取页面滚动位置
   - ✅ 返回垂直滚动距离

### Out of Scope (不包含)

- ❌ 元素点击、输入等交互（C4）
- ❌ 元素属性、文本读取（C4）
- ❌ 断言和验证（Stage D）
- ❌ 页面性能监控

## Constraints (约束)

### Technical Constraints (技术约束)

1. **miniprogram-automator 依赖**
   - 使用 Page 实例的官方 API
   - 遵循 WXML 选择器规范
   - 支持 XPath 查询

2. **ElementRef 协议**
   - 支持 refId（缓存引用）
   - 支持 selector（WXML 选择器）
   - 支持 xpath（XPath 选择器）
   - 支持 index（多元素索引）
   - 支持 save（保存到缓存）

3. **查询约束**
   - selector: 支持 class, id, tag, attribute
   - xpath: 完整 XPath 语法
   - 超时默认: 5 秒

4. **数据操作约束**
   - setData: 自动触发页面渲染
   - getData: 支持点记法路径（如 user.name）
   - callMethod: 方法必须在 Page 定义中

### Business Constraints (业务约束)

1. **查询时间**: <2 秒
2. **等待超时**: 默认 5 秒，可配置最大 30 秒
3. **数据操作**: <1 秒
4. **方法调用**: <5 秒

## Success Criteria (成功标准)

### Functional Criteria (功能标准)

- ✅ query 支持 selector 和 xpath
- ✅ queryAll 返回元素数组
- ✅ waitFor 等待元素出现
- ✅ getData 获取页面数据
- ✅ setData 更新页面数据
- ✅ callMethod 调用页面方法
- ✅ getSize 返回页面尺寸
- ✅ getScrollTop 返回滚动位置

### Quality Criteria (质量标准)

- ✅ TypeScript 编译 0 错误
- ✅ 单元测试覆盖率 >80%
- ✅ 27 个测试用例全部通过
- ✅ 无 ESLint 错误
- ✅ JSDoc 注释完整

### Documentation Criteria (文档标准)

- ✅ ElementRef 协议文档清晰
- ✅ 选择器示例完整
- ✅ 工具描述包含用法
- ⏳ charter.C3.align.yaml (本文档)
- ⏳ tasks.C3.atomize.md (任务卡)

## Definition of Done (完成标准)

**代码**:
- ✅ `src/tools/page.ts` 实现完成 (458 lines)
- ✅ TypeScript 编译通过
- ✅ 8 个工具正确注册

**测试**:
- ✅ `tests/unit/page.test.ts` (450 lines)
- ✅ 27 个测试用例全部通过
- ✅ 覆盖 ElementRef 协议
- ✅ Mock Page 实例

**文档**:
- ⏳ charter.C3.align.yaml (追溯)
- ⏳ tasks.C3.atomize.md (追溯)
- ✅ README 工具列表更新

**Git**:
- ✅ 已提交（Stage C 提交）

## Dependencies (依赖)

**前置任务**:
- ✅ C2: MiniProgram 工具（导航到页面）
- ✅ B2: SessionStore（管理 Page 实例）
- ✅ ElementRef 协议设计

**后续任务**:
- C3 → C4 (Element 工具需要元素引用)
- C3 → C5 (工具注册器集成)

## Risks (风险)

### Technical Risks (技术风险)

1. **选择器复杂性** - 🟡 中风险
   - 影响：复杂选择器可能查询失败
   - 缓解：提供详细错误信息和示例

2. **元素缓存失效** - 🟡 中风险
   - 影响：页面更新后缓存的元素引用失效
   - 缓解：页面变化时自动清理缓存

3. **waitFor 超时** - 🟢 已缓解
   - 风险：等待条件永不满足导致超时
   - 缓解：可配置超时时间，明确错误提示

### Business Risks (业务风险)

1. **性能问题** - 🟢 已缓解
   - 影响：频繁查询可能影响性能
   - 缓解：支持元素缓存减少重复查询

## Open Questions (未决问题)

- ❓ 是否需要支持自定义等待条件函数？（当前仅等待元素）
- ❓ 是否需要支持批量查询优化？（当前逐个查询）
- ❓ 元素缓存策略是否需要优化？（当前页面变化时清理）

## References (参考资料)

- `docs/微信小程序自动化完整操作手册.md` - Page API 文档
- `docs/完整实现方案.md` - ElementRef 协议设计
- `miniprogram-automator` 官方文档
- WXML 选择器文档

---

**Approval**: ✅ RETROSPECTIVE APPROVED
**Implementation**: ✅ COMPLETED
**Documentation**: ⏳ IN PROGRESS
