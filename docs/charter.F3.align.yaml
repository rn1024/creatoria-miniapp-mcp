# Charter: F3 - 会话报告生成

## 项目信息
project: creatoria-miniapp-mcp
stage: F - 可观测性与产物输出
task_id: F3
title: 会话报告生成（JSON/Markdown 汇总）
owner: ClaudeCode
created: 2025-10-03
status: in_progress

## 1. 目标 (Goals)
### 主要目标
- **会话汇总**：自动生成会话执行报告，包含所有工具调用、执行时长、成功/失败统计
- **双格式输出**：支持 JSON（机器可读）和 Markdown（人类可读）两种格式
- **失败追踪**：汇总所有失败的工具调用，关联 F2 快照目录
- **性能分析**：提供工具调用耗时统计，识别性能瓶颈

### 业务价值
- **调试加速**：一站式查看会话全貌，快速定位问题
- **质量度量**：提供成功率、平均耗时等指标，评估自动化脚本质量
- **报告分享**：Markdown 格式便于在团队中共享测试结果

## 2. 非目标 (Non-Goals)
- ❌ 不实现实时报告更新（仅会话结束时生成）
- ❌ 不实现报告的自动上传/分发（用户自行处理）
- ❌ 不实现可视化图表（纯文本/JSON）
- ❌ 不实现多会话对比分析（单会话维度）

## 3. 范围 (Scope)
### In Scope
- ✅ 会话级别数据收集
  - 工具调用记录（工具名、参数、结果、耗时、状态）
  - 失败详情（错误消息、快照路径）
  - 会话元数据（创建时间、结束时间、总耗时）
- ✅ JSON 报告生成
  - 结构化数据（可编程解析）
  - 完整的调用历史
  - 统计指标
- ✅ Markdown 报告生成
  - 汇总表格
  - 失败详情列表
  - 性能统计
- ✅ 报告存储
  - 路径：`artifacts/{sessionId}/report.json`
  - 路径：`artifacts/{sessionId}/report.md`

### Out of Scope
- 🚫 HTML/PDF 格式（超出范围）
- 🚫 实时流式报告（仅最终报告）
- 🚫 多会话聚合（单会话独立）
- 🚫 告警/通知机制（超出本地 MCP 职责）

## 4. 约束 (Constraints)
### 技术约束
- **依赖 F1**：需要从结构化日志中提取工具调用数据
- **依赖 F2**：需要关联失败快照路径
- **内存限制**：需要在会话期间缓存所有调用记录（控制内存增长）
- **文件格式**：JSON 必须符合 JSON Schema，Markdown 必须符合 CommonMark

### 设计约束
- **可选功能**：默认禁用，显式启用（避免产生过多文件）
- **异步生成**：报告生成不应阻塞会话关闭
- **容错性**：报告生成失败不应影响会话正常关闭

## 5. 解决方案 (Solution)
### 5.1 数据收集
```
┌─────────────────────────────────────────────────────────────┐
│                     SessionState                             │
│                                                              │
│  reportData?: {                                              │
│    toolCalls: ToolCallRecord[]                               │
│    startTime: Date                                           │
│    endTime?: Date                                            │
│  }                                                           │
└─────────────────────────────────────────────────────────────┘
```

**ToolCallRecord 结构**:
```typescript
interface ToolCallRecord {
  timestamp: Date
  toolName: string
  args: any // Sanitized
  duration: number // milliseconds
  success: boolean
  result?: any // Sanitized
  error?: {
    message: string
    snapshotPath?: string // Link to F2 snapshot
  }
}
```

### 5.2 报告生成流程
```yaml
步骤:
  1. 会话开始:
     - 初始化 reportData = { toolCalls: [], startTime: now }

  2. 工具调用时 (ToolLogger):
     - 记录 ToolCallRecord 到 session.reportData.toolCalls

  3. 会话关闭:
     - 设置 reportData.endTime = now
     - 调用 generateReport(session)
     - 生成 report.json 和 report.md
     - 保存到 artifacts/{sessionId}/
```

### 5.3 报告格式

#### JSON 格式
```json
{
  "sessionId": "test-session-123",
  "startTime": "2025-10-03T06:00:00.000Z",
  "endTime": "2025-10-03T06:15:30.000Z",
  "duration": 930000,
  "summary": {
    "totalCalls": 50,
    "successCount": 47,
    "failureCount": 3,
    "successRate": 0.94,
    "avgDuration": 1500,
    "maxDuration": 5000,
    "minDuration": 100
  },
  "toolCalls": [
    {
      "timestamp": "2025-10-03T06:00:05.000Z",
      "toolName": "miniprogram_launch",
      "duration": 3000,
      "success": true
    },
    {
      "timestamp": "2025-10-03T06:05:10.000Z",
      "toolName": "element_click",
      "duration": 500,
      "success": false,
      "error": {
        "message": "Element not found",
        "snapshotPath": "failures/element_click-2025-10-03_06-05-10-123Z"
      }
    }
  ],
  "failures": [
    {
      "toolName": "element_click",
      "timestamp": "2025-10-03T06:05:10.000Z",
      "error": "Element not found",
      "snapshotPath": "failures/element_click-2025-10-03_06-05-10-123Z"
    }
  ]
}
```

#### Markdown 格式
```markdown
# Session Report: test-session-123

## Summary
- **Duration**: 15m 30s
- **Total Calls**: 50
- **Success Rate**: 94% (47/50)
- **Average Duration**: 1.5s

## Tool Call Statistics
| Tool Name | Calls | Success | Failure | Avg Duration |
|-----------|-------|---------|---------|--------------|
| miniprogram_launch | 1 | 1 | 0 | 3.0s |
| page_navigate | 5 | 5 | 0 | 0.8s |
| element_click | 10 | 8 | 2 | 0.5s |
| element_input | 8 | 8 | 0 | 0.3s |

## Failures
### 1. element_click
- **Time**: 2025-10-03 06:05:10
- **Error**: Element not found
- **Snapshot**: [failures/element_click-2025-10-03_06-05-10-123Z](failures/element_click-2025-10-03_06-05-10-123Z)

## Timeline
| Time | Tool | Status | Duration |
|------|------|--------|----------|
| 06:00:05 | miniprogram_launch | ✅ | 3.0s |
| 06:00:08 | page_navigate | ✅ | 0.8s |
| 06:05:10 | element_click | ❌ | 0.5s |
```

## 6. 实现计划 (Implementation Plan)
### Phase 1: 数据收集 (1h)
- [ ] 扩展 SessionState 类型定义
- [ ] 在 ToolLogger.wrap() 中记录 ToolCallRecord
- [ ] 添加配置项 `enableSessionReport`

### Phase 2: 报告生成 (2h)
- [ ] 实现 ReportGenerator 类
- [ ] 实现 generateJSONReport()
- [ ] 实现 generateMarkdownReport()
- [ ] 集成到 session.dispose()

### Phase 3: 测试验证 (1h)
- [ ] 单元测试：数据收集
- [ ] 单元测试：JSON 格式验证
- [ ] 单元测试：Markdown 格式验证
- [ ] 集成测试：端到端报告生成

## 7. 验收标准 (Definition of Done)
### 功能验收
- ✅ 会话结束时自动生成 report.json 和 report.md
- ✅ JSON 格式包含所有必需字段（summary、toolCalls、failures）
- ✅ Markdown 格式可读性强，包含表格和链接
- ✅ 失败记录正确关联 F2 快照路径
- ✅ 配置为 `false` 时不生成报告

### 质量验收
- ✅ 新增测试用例全部通过
- ✅ 现有测试用例无回归（406+ 全通过）
- ✅ TypeScript 编译无错误
- ✅ 代码格式化完成（Prettier）

### 文档验收
- ✅ charter.F3.align.yaml 完成
- ✅ architecture.F3.md 完成
- ✅ 使用示例更新

## 8. 风险与缓解 (Risks)
### 风险 #1: 内存占用随会话增长
- **影响**: 长时间会话可能产生大量 ToolCallRecord
- **缓解**:
  - 限制单个会话最大调用记录数（如 1000 条）
  - 超出限制后，丢弃最早的记录
  - 文档建议定期创建新会话
- **监控**: 记录 toolCalls 数组长度到日志

### 风险 #2: 报告生成耗时影响关闭速度
- **影响**: 用户等待会话关闭时间变长
- **缓解**:
  - Fire-and-forget 模式生成报告
  - 报告生成失败不阻塞关闭
- **监控**: 记录报告生成耗时

### 风险 #3: 敏感数据泄漏到报告
- **影响**: 报告文件包含敏感信息
- **缓解**:
  - 复用 F1 脱敏逻辑处理 args/result
  - 文档提醒报告文件的隐私风险
- **监控**: Code review 检查脱敏逻辑

## 9. 依赖关系 (Dependencies)
### 输入依赖
- ✅ **F1 (日志系统)**：ToolLogger 已实现
- ✅ **F2 (失败快照)**：快照路径格式已确定
- ✅ **OutputManager**：文件写入能力已实现

### 输出依赖
- 无下游依赖（F3 是 Stage F 的最后任务）

## 10. 里程碑 (Milestones)
| 里程碑 | 目标 | 预计完成 |
|--------|------|----------|
| M1 | 数据收集完成 | T+1h |
| M2 | 报告生成完成 | T+3h |
| M3 | 测试验证通过 | T+4h |
| M4 | Code Review + 提交 | T+4.5h |

## 11. 成功指标 (Success Metrics)
- **功能完整性**: 报告生成成功率 100%（配置启用时）
- **性能影响**: 报告生成耗时 < 200ms（不阻塞关闭）
- **文件大小**: 单会话报告 < 1MB（控制磁盘占用）
- **可读性**: Markdown 格式在 GitHub 预览正常

## 12. 开放问题 (Open Questions)
- ❓ Q1: 是否需要支持报告模板自定义？
  - 建议：F3 保持简单，固定格式；自定义留给用户后处理

- ❓ Q2: 是否需要支持增量报告（会话过程中实时更新）？
  - 建议：F3 仅支持最终报告；实时功能复杂度高，留给未来优化

- ❓ Q3: 是否需要包含页面截图链接？
  - 建议：仅链接 F2 失败快照；成功调用的截图不包含（避免报告过大）

## 13. 审批记录 (Approvals)
- [ ] **技术方案审批**: 待审批
- [ ] **安全审查**: 待审批
- [ ] **实现批准**: 待批准
